// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  ORGANIZER
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(USER)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  // Relaciones
  events        Event[]        @relation("EventCreator")
  registrations Registration[]
  sessions      UserSession[]
  
  @@map("users")
}

model Event {
  id              Int      @id @default(autoincrement())
  title           String
  description     String?
  date            DateTime
  location        String?
  maxParticipants Int?     @map("max_participants")
  createdBy       Int      @map("created_by")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  
  // Relaciones
  creator       User           @relation("EventCreator", fields: [createdBy], references: [id], onDelete: Cascade)
  registrations Registration[]
  
  @@map("events")
}

model Registration {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  eventId   Int      @map("event_id")
  status    String   @default("CONFIRMED")
  createdAt DateTime @default(now()) @map("created_at")
  
  // Relaciones
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)
  
  @@unique([userId, eventId])
  @@map("registrations")
}

model UserSession {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  token     String
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")
  
  // Relaciones
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("user_sessions")
}

model DashboardStats {
  id                 Int      @id @default(autoincrement())
  totalUsers         Int      @default(0) @map("total_users")
  totalEvents        Int      @default(0) @map("total_events")
  totalRegistrations Int      @default(0) @map("total_registrations")
  updatedAt          DateTime @default(now()) @map("updated_at")
  
  @@map("dashboard_stats")
}
